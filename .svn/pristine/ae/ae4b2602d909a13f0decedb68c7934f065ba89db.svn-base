mse version: 0.3.8
game: magic
short name: Planeshifted Splits
full name: Planeshifted Split Cards
installer group: magic/Planeshifted/Split Cards
icon: card-sample.png
position hint: 203

version: 2010-03-26
depends on:
	package: magic.mse-game
	version: 2008-06-02
depends on:
	package: magic-watermarks.mse-include
	version: 2007-09-23
depends on:
	package: magic-mana-large.mse-symbol-font
	version: 2007-09-23
depends on:
	package: magic-mana-small.mse-symbol-font
	version: 2007-09-23

card width: 523
card height: 375
card dpi: 150
# By Pichoro; based on templates by Wolfwood and Buttock1234
############################################################## Extra scripts
init script:
	# Should hybrids have a grey name?
	mask_hybrid_with_land := { styling.grey_hybrid_name }
	
	#Should multicolor lands with basic land types have a colored name?
	mask_multi_land_with_color := { styling.colored_multicolor_land_name }
	
	template_suffix := [card: "card.jpg", pt: "pt.png"]
	template      := { input + template_suffix[type] }
	land_template := { (if input == "a" then "c" else input) + "l" + template_suffix[type] }
	
	# Use the normal tap symbol
	mana_t := {
		if      styling.tap_symbol == "old"        then "old"
		else if styling.tap_symbol == "diagonal T" then "older"
		else                                            "new"
	}
	# Use guild mana symbols?
	guild_mana := { styling.use_guild_mana_symbols }
	
	card_shape := { if styling.shifted_sorting then "split, shifted" else "split" }

############################################################## Set info fields
set info style:
	symbol:
		variation:
			name: invertedcommon
			border radius: 0.10
			fill type: solid
			fill color:   rgb(255,255,255)
			border color: rgb(0,0,0)
############################################################## Extra style options
styling field:
	type: boolean
	name: shifted sorting
	description: Should this style of card sort as a shifted card (after other cards of that color)?
	initial: yes
styling field:
	type: boolean
	name: grey hybrid name
	description: Use a grey background for the name and type line on hybrid cards. This is done on real cards.
styling field:
	type: boolean
	name: colored multicolor land name
	description: Use a colored background for the name and type on multicolor land cards with a basic land type. This is done on real cards.
styling field:
	type: boolean
	name: use guild mana symbols
	description: Use the Ravnica guild symbols instead of the official half/half circles for hybrid mana.
	initial: no
styling field:
	type: package choice
	name: text box mana symbols
	match: magic-mana-*.mse-symbol-font
	initial: magic-mana-small.mse-symbol-font
styling field:
	type: choice
	name: tap symbol
	description: What tap and untap symbols should be used on cards?
	initial: modern
	choice: modern
	choice: old
	choice: diagonal T
styling field:
	type: choice
	name: center text
	description: When to center text (short text only means only on one-line cards with no flavor text)
	choice: always
	choice: short text only
	choice: never
	initial: never
styling field:
	type: boolean
	name: inverted common symbol
	description: Should the common rarity symbol be inverted, like in Coldsnap?
	initial: no
styling field:
	type: package choice
	name: overlay
	description: Should there be an overlay applied, such as foil?
	match: magic-overlay-*.mse-include
	required: false
styling style:
	use guild mana symbols:
		choice images:
			yes: /magic-mana-small.mse-symbol-font/mana_guild_rg.png
			no:  /magic-mana-small.mse-symbol-font/mana_rg.png
	tap symbol:
		render style: both
		choice images:
			modern:     /magic-mana-large.mse-symbol-font/mana_t.png
			old:        /magic-mana-large.mse-symbol-font/mana_t_old.png
			diagonal T: /magic-mana-large.mse-symbol-font/mana_t_older.png
############################################################## Card fields
card style:
	############################# Background stuff
	border color:
		left: 0
		top: 0
		width: 523
		height: 375
		radius: 18
		z index: -1
	card color:
		left: 18
		top: 18
		width: 236
		height: 338
		z index: 0
		render style: image
		popup style: in place
		image: { card_background() }
	card color 2:
		left: 269
		top: 18
		width: 236
		height: 338
		z index: 0
		render style: image
		popup style: in place
		image: { card_background() }
	############################# Name line
	name:
		left: { if card.card_symbol=="none" then 30 else 51 }
		top: 27
		right:  { 242 - card_style.casting_cost.content_width }
		height: 17
		alignment: top shrink-overflow
		padding bottom: 0
		z index: 1
		font:
			name: Matrix
			size: 13
			weight: bold
			color: rgb(255,255,255)
			shadow color: rgb(0,0,0)
			shadow displacement x: -1
			shadow displacement y: 1
	name 2:
		left: { if card.card_symbol_2=="none" then 282 else 51 }
		top: 27
		right:  { 493 - card_style.casting_cost_2.content_width }
		height: 17
		alignment: top shrink-overflow
		padding bottom: 0
		z index: 1
		font:
			name: Matrix
			size: 13
			weight: bold
			color: rgb(255,255,255)
			shadow color: rgb(0,0,0)
			shadow displacement x: -1
			shadow displacement y: 1
	casting cost:
		right: 243
		top: 28
		width: { max(19, card_style.casting_cost.content_width) + 3 }
		height: 16
		alignment: bottom right
		symbol font:
			name: magic-mana-large
			size: 12
			alignment: middle right
		always symbol: true
		z index: 2
		padding top: 0
	casting cost 2:
		right: 494
		top: 28
		width: { max(19, card_style.casting_cost_2.content_width) + 3 }
		height: 16
		alignment: bottom right
		symbol font:
			name: magic-mana-large
			size: 12
			alignment: middle right
		always symbol: true
		z index: 2
		padding top: 0
	############################# Image
	image:
		left:	28
		top:	49
		width:	216
		height:	159
		z index: 1
	image 2:
		left:	279
		top:	49
		width:	216
		height:	159
		z index: 1
	############################# Card type
	type:
		left: 30
		top : 211
		width: { 210 - max(13,card_style.rarity.content_width) }
		height: 17
		alignment: top shrink-overflow
		z index: 1
		font:
			name: Matrix
			size: 12
			color: rgb(255,255,255)
			shadow color: rgb(0,0,0)
			shadow displacement x: -1
			shadow displacement y: 1
			separator color: rgb(128,128,128)
	type 2:
		left: 282
		top : 211
		width: { 210 - max(13,card_style.rarity.content_width) }
		height: 17
		alignment: top shrink-overflow
		z index: 1
		font:
			name: Matrix
			size: 12
			color: rgb(255,255,255)
			shadow color: rgb(0,0,0)
			shadow displacement x: -1
			shadow displacement y: 1
			separator color: rgb(128,128,128)
	rarity:
		right: 241
		top : 213
		width: 26
		height: 13
		z index: 2
		alignment: middle right
		render style: image
		choice images:
			# Images based on the set symbol
			basic land:
				script:
					if styling.inverted_common_symbol then symbol_variation(symbol: set.symbol, variation: "invertedcommon")
					else symbol_variation(symbol: set.symbol, variation: "common")
			common:
				script:
					if styling.inverted_common_symbol then symbol_variation(symbol: set.symbol, variation: "invertedcommon")
					else symbol_variation(symbol: set.symbol, variation: "common")
			uncommon:   script: symbol_variation(symbol: set.symbol, variation: "uncommon")
			rare:       script: symbol_variation(symbol: set.symbol, variation: "rare")
			mythic rare:       script: symbol_variation(symbol: set.symbol, variation: "mythic rare")
			special:    script: symbol_variation(symbol: set.symbol, variation: "special")
	rarity 2:
		right: 493
		top : 213
		width: 26
		height: 13
		z index: 2
		alignment: middle right
		render style: image
		choice images:
			# Images based on the set symbol
			basic land:
				script:
					if styling.inverted_common_symbol then symbol_variation(symbol: set.symbol, variation: "invertedcommon")
					else symbol_variation(symbol: set.symbol, variation: "common")
			common:
				script:
					if styling.inverted_common_symbol then symbol_variation(symbol: set.symbol, variation: "invertedcommon")
					else symbol_variation(symbol: set.symbol, variation: "common")
			uncommon:   script: symbol_variation(symbol: set.symbol, variation: "uncommon")
			rare:       script: symbol_variation(symbol: set.symbol, variation: "rare")
			special:    script: symbol_variation(symbol: set.symbol, variation: "special")
	############################# Text box
	text:
		left: 29
		top : 233
		width: 214
		height: 99
		font:
			name: MPlantin
			italic name: MPlantin-Italic
			size: 14
			scale down to: 6
			color: rgb(0,0,0)
		symbol font:
			name: { styling.text_box_mana_symbols }
			size: 14
		alignment:
			script:
				if (styling.center_text == "short text only" and
				   not contains(match:"\n", card.rule_text) and
				   card.flavor_text == "<i-flavor></i-flavor>" and
				   card_style.text.content_lines <= 2) or
				   styling.center_text == "always"
				then "middle center"
				else "middle left"
		z index: 2
		padding left:   2
		padding right:  2
		line height hard: 1.2
		line height line: 1.5
		line height soft: 0.9
	text 2:
		left: 279
		top : 233
		width: 214
		height: 99
		font:
			name: MPlantin
			italic name: MPlantin-Italic
			size: 14
			scale down to: 6
			color: rgb(0,0,0)
		symbol font:
			name: { styling.text_box_mana_symbols }
			size: 14
		alignment:
			script:
				if (styling.center_text == "short text only" and
				   not contains(match:"\n", card.rule_text) and
				   card.flavor_text == "<i-flavor></i-flavor>" and
				   card_style.text.content_lines <= 2) or
				   styling.center_text == "always"
				then "middle center"
				else "middle left"
		z index: 2
		padding left:   2
		padding right:  2
		line height hard: 1.2
		line height line: 1.5
		line height soft: 0.9
	watermark:
		left: 87
		top : 228
		width: 92
		height: 108
		z index: 1
		render style: image
		alignment: middle center
		include file: /magic-watermarks.mse-include/watermarks
	watermark 2:
		left: 338
		top : 228
		width: 92
		height: 108
		z index: 1
		render style: image
		alignment: middle center
		include file: /magic-watermarks.mse-include/watermarks
	############################# PT
	pt:
		z index: 2
		left: 200
		top: 327
		width: 48
		height: 25
		alignment: center middle shrink-overflow
		font:
			name: ModMatrix
			size: 14
			weight: bold
			color: rgb(255,255,255)
			shadow color: rgb(0,0,0)
			shadow displacement x: -1
			shadow displacement y: 1
			separator color: rgb(200,0,0)
	pt 2:
		z index: 2
		left: 451
		top: 327
		width: 48
		height: 25
		alignment: center middle shrink-overflow
		font:
			name: ModMatrix
			size: 14
			weight: bold
			color: rgb(255,255,255)
			shadow color: rgb(0,0,0)
			shadow displacement x: -1
			shadow displacement y: 1
			separator color: rgb(200,0,0)
	############################# Card sorting / numbering
	############################# Copyright stuff
	illustrator:
		left: 46
		top : 338
		width: 155
		height: 16
		z index: 1
		font:
			name: Matrix
			size: 8
			color: { font_color(card.card_color) }
	illustrator 2:
		left: 298
		top : 338
		width: 155
		height: 16
		z index: 1
		font:
			name: Matrix
			size: 8
			color: { font_color(card.card_color_2) }
	copyright line:
		left: 26
		top : 348
		width: 175
		height: 12
		z index: 1
		font:
			name: MPlantin
			size: 6
			color: { font_color(card.card_color) }
	copyright line 2:
		left: 278
		top : 348
		width: 175
		height: 12
		z index: 1
		font:
			name: MPlantin
			size: 6
			color: { font_color(card.card_color_2) }
############################################################## Extra card fields
extra card field:
	type: choice
	name: pt box
	script: card.card_color
	editable: false
	save value: false
extra card field:
	type: choice
	name: pt box 2
	script: card.card_color_2
	editable: false
	save value: false
extra card field:
	type: choice
	name: foil layer
	choice: foil
	save value: false
	editable: false
extra card style:
	pt box:
		left: 194
		top: 326
		width: 56
		height: 29
		z index: 1
		visible: { card.pt != "" }
		render style: image
		image: { card_ptbox() }
	pt box 2:
		left: 445
		top: 326
		width: 56
		height: 29
		z index: 1
		visible: { card.pt_2 != "" }
		render style: image
		image: { card_ptbox() }
	foil layer:
		right: 523
		bottom: 0
		width: 375
		height: 523
		z index: 3
		angle: 90
		render style: image
		image: {if styling.overlay == "" then nil else styling.overlay + "/overlay.png"}
